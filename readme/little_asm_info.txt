Partially quoting from: http://cs.smith.edu/~thiebaut/ArtOfAssembly/CH06/CH06-3.html#HEADING3-4

There are four supported x86 logical instructions: AND, OR, XOR and NOT:
Except NOT, these instructions affect the flags as follows:
* They clear the carry flag.
* They clear the overflow flag.
* They set the zero flag if the result is zero, they clear it otherwise.
* They copy the H.O. bit of the result into the sign flag.
* They set the parity flag according to the parity (number of one bits) in the result.
* They scramble the auxiliary carry flag. 
The NOT instruction does not affect any flags.

Now, based on http://en.wikibooks.org/wiki/X86_Assembly/Control_Flow,
here is a list of jump operands along with respective conditions (by flags):
* jmp: None
* je: ZF=1
* jne: ZF=0
* jg: ZF=0 and SF=OF
* jge: SF=OF
* ja: CF=0 and ZF=0
* jae: CF=0
* jl: SF!=OF
* jle: ZF=1 or SF!=OF
* jb: CF=1
* jbe: CF=1 or ZF=1
* jo: OF=1
* jno: OF=0
* jz: ZF=1 (Same as je)
* jnz: ZF=0 (Same as jne)
